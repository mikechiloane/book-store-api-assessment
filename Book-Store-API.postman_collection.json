{
  "info": {
    "name": "Book Store API",
    "description": "API collection for Book Store Management System",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "item": [
    {
      "name": "Books",
      "item": [
        {
          "name": "Create Book",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Spring Boot in Action\",\n  \"author\": \"Craig Walls\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/books",
              "host": ["{{baseUrl}}"],
              "path": ["books"]
            },
            "description": "Create a new book with title and author. ISBN will be auto-generated."
          },
          "response": []
        },
        {
          "name": "Get Book by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/books/1",
              "host": ["{{baseUrl}}"],
              "path": ["books", "1"]
            },
            "description": "Retrieve a specific book by its ID."
          },
          "response": []
        },
        {
          "name": "Update Book",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Spring Boot in Action (2nd Edition)\",\n  \"author\": \"Craig Walls\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/books/1",
              "host": ["{{baseUrl}}"],
              "path": ["books", "1"]
            },
            "description": "Update an existing book. ISBN remains unchanged."
          },
          "response": []
        },
        {
          "name": "Delete Book",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/books/1",
              "host": ["{{baseUrl}}"],
              "path": ["books", "1"]
            },
            "description": "Delete a book by its ID."
          },
          "response": []
        },
        {
          "name": "Get All Books",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/books?page=0&size=10&sortBy=title&sortDir=asc",
              "host": ["{{baseUrl}}"],
              "path": ["books"],
              "query": [
                {
                  "key": "page",
                  "value": "0",
                  "description": "Page number (0-based)"
                },
                {
                  "key": "size",
                  "value": "10",
                  "description": "Number of items per page"
                },
                {
                  "key": "sortBy",
                  "value": "title",
                  "description": "Field to sort by (id, title, author, isbn)"
                },
                {
                  "key": "sortDir",
                  "value": "asc",
                  "description": "Sort direction (asc or desc)"
                }
              ]
            },
            "description": "Get all books with pagination and sorting support."
          },
          "response": []
        },
        {
          "name": "Search Books by Title",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/books/search?title=Spring&page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["books", "search"],
              "query": [
                {
                  "key": "title",
                  "value": "Spring",
                  "description": "Search term for book title"
                },
                {
                  "key": "page",
                  "value": "0",
                  "description": "Page number (0-based)"
                },
                {
                  "key": "size",
                  "value": "10",
                  "description": "Number of items per page"
                }
              ]
            },
            "description": "Search books by title (case-insensitive partial match)."
          },
          "response": []
        },
        {
          "name": "Search Books by Author",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/books/search?author=Craig&page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["books", "search"],
              "query": [
                {
                  "key": "author",
                  "value": "Craig",
                  "description": "Search term for book author"
                },
                {
                  "key": "page",
                  "value": "0",
                  "description": "Page number (0-based)"
                },
                {
                  "key": "size",
                  "value": "10",
                  "description": "Number of items per page"
                }
              ]
            },
            "description": "Search books by author (case-insensitive partial match)."
          },
          "response": []
        },
        {
          "name": "Search Books by Title and Author",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/books/search?title=Spring&author=Craig&page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["books", "search"],
              "query": [
                {
                  "key": "title",
                  "value": "Spring",
                  "description": "Search term for book title"
                },
                {
                  "key": "author",
                  "value": "Craig",
                  "description": "Search term for book author"
                },
                {
                  "key": "page",
                  "value": "0",
                  "description": "Page number (0-based)"
                },
                {
                  "key": "size",
                  "value": "10",
                  "description": "Number of items per page"
                }
              ]
            },
            "description": "Search books by both title and author (case-insensitive partial match)."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Error Scenarios",
      "item": [
        {
          "name": "Create Book - Invalid Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"\",\n  \"author\": \"This author name is way too long and exceeds the fifty character limit set for the author field\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/books",
              "host": ["{{baseUrl}}"],
              "path": ["books"]
            },
            "description": "Test validation errors with invalid book data."
          },
          "response": []
        },
        {
          "name": "Get Non-existent Book",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/books/999999",
              "host": ["{{baseUrl}}"],
              "path": ["books", "999999"]
            },
            "description": "Test 404 error when trying to get a book that doesn't exist."
          },
          "response": []
        },
        {
          "name": "Update Non-existent Book",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Title\",\n  \"author\": \"Updated Author\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/books/999999",
              "host": ["{{baseUrl}}"],
              "path": ["books", "999999"]
            },
            "description": "Test 404 error when trying to update a book that doesn't exist."
          },
          "response": []
        },
        {
          "name": "Delete Non-existent Book",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/books/999999",
              "host": ["{{baseUrl}}"],
              "path": ["books", "999999"]
            },
            "description": "Test 404 error when trying to delete a book that doesn't exist."
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    }
  ]
}
